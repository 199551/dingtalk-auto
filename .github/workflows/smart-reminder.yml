name: 智能巡检提醒
on:
  schedule:
    # 每10分钟执行一次，确保能覆盖前后5分钟的窗口
    - cron: '*/10 16-23 * * *'  # UTC 16-23点每10分钟 (北京时间0-7点)
    - cron: '*/10 0-15 * * *'   # UTC 0-15点每10分钟 (北京时间8-23点)
  workflow_dispatch:
    inputs:
      test_time:
        description: '测试时间 (HH:MM)'
        required: false
        default: ''

jobs:
  send-reminder:
    runs-on: ubuntu-latest
    steps:
      - name: 智能巡检提醒
        env:
          DINGTALK_TOKEN: cfe74c285e2e30b46133eef62def804d28baef0d681a81ee0fdd1958fb13c877
        run: |
          # 设置时区
          export TZ='Asia/Shanghai'
          
          # 处理手动输入的测试时间
          if [ -n "${{ github.event.inputs.test_time }}" ]; then
            TEST_TIME="${{ github.event.inputs.test_time }}"
            echo "使用测试时间: $TEST_TIME"
            CURRENT_HOUR=$(echo $TEST_TIME | cut -d: -f1)
            CURRENT_MINUTE=$(echo $TEST_TIME | cut -d: -f2)
            CURRENT_TIME=$TEST_TIME
          else
            CURRENT_HOUR=$(date +%H)
            CURRENT_MINUTE=$(date +%M)
            CURRENT_TIME=$(date +%H:%M)
          fi
          
          CURRENT_DATE=$(date +%Y-%m-%d)
          CURRENT_WEEK=$(date +%u)
          echo "当前时间(北京时间): $(date)"
          echo "当前日期: $CURRENT_DATE"
          echo "当前时分: $CURRENT_TIME"
          
          # 处理跨天班次问题
          # 如果当前时间是00:00-03:00，我们需要检查前一天是否是甲班
          HOUR_NUM=$((10#$CURRENT_HOUR))
          ADJUSTED_DATE="$CURRENT_DATE"
          
          if [ $HOUR_NUM -lt 3 ] || [ $HOUR_NUM -ge 20 ]; then
            # 在甲班可能的工作时间段内，我们需要检查前一天是否是甲班
            # 计算前一天的日期
            ADJUSTED_DATE=$(date -d "yesterday" +%Y-%m-%d)
            echo "调整日期为前一天: $ADJUSTED_DATE (处理跨天班次)"
          fi
          
          # 四班三倒循环计算，使用调整后的日期
          START_DATE="2025-10-27"  # 以2025-10-27为甲班开始
          DAYS_DIFF=$(( ($(date -d "$ADJUSTED_DATE" +%s) - $(date -d "$START_DATE" +%s)) / 86400 ))
          CYCLE_POS=$((DAYS_DIFF % 4))
          
          echo "从起始日相差天数: $DAYS_DIFF"
          echo "周期位置: $CYCLE_POS (0=甲班, 1=休班, 2=乙班, 3=丙班)"
          
          # 判断今日班次
          case $CYCLE_POS in
            0)
              TODAY_SHIFT="甲班 20:00-03:00"
              IS_WORKING=true
              ;;
            1)
              TODAY_SHIFT="休班"
              IS_WORKING=false
              ;;
            2)
              TODAY_SHIFT="乙班 03:00-11:00"
              IS_WORKING=true
              ;;
            3)
              TODAY_SHIFT="丙班 11:00-20:00"
              IS_WORKING=true
              ;;
          esac
          
          echo "今日班次: $TODAY_SHIFT"
          
          # 定义提醒时间点配置（每2小时，除了20:30特殊）
          declare -A REMINDER_TIMES=(
            ["00:00"]="🕛 注意：线上巡检按时进行"
            ["02:00"]="🕑 注意：线上巡检按时进行" 
            ["04:00"]="🕓 注意：线上巡检按时进行"
            ["06:00"]="🕕 注意：线上巡检按时进行"
            ["08:00"]="🕗 注意：线上巡检按时进行"
            ["10:00"]="🕙 注意：线上巡检按时进行"
            ["12:00"]="🕛 注意：线上巡检按时进行"
            ["14:00"]="🕑 注意：线上巡检按时进行"
            ["16:00"]="🕓 注意：线上巡检按时进行"
            ["18:00"]="🕕 注意：线上巡检按时进行"
            ["20:30"]="🕣 注意：线上巡检按时进行"
            ["22:00"]="🕙 注意：线上巡检按时进行"
          )
          
          # 检查是否在提醒时间点的前后5分钟内
          SHOULD_REMIND=false
          TARGET_TIME=""
          REMINDER_CONTENT=""
          TIME_DIRECTION=""
          MINUTES_AWAY=0
          
          for time_key in "${!REMINDER_TIMES[@]}"; do
            target_hour=$(echo $time_key | cut -d: -f1)
            target_minute=$(echo $time_key | cut -d: -f2)
            
            target_total_minutes=$((10#$target_hour * 60 + 10#$target_minute))
            current_total_minutes=$((10#$CURRENT_HOUR * 60 + 10#$CURRENT_MINUTE))
            time_diff=$((current_total_minutes - target_total_minutes))
            
            # 前后5分钟窗口（包含0，即正好在时间点上）
            if [ $time_diff -ge -5 ] && [ $time_diff -le 5 ]; then
              SHOULD_REMIND=true
              TARGET_TIME=$time_key
              REMINDER_CONTENT="${REMINDER_TIMES[$time_key]}"
              
              # 判断是前5分钟还是后5分钟或正好
              if [ $time_diff -lt 0 ]; then
                TIME_DIRECTION="前"
                MINUTES_AWAY=$((0 - $time_diff))
              elif [ $time_diff -gt 0 ]; then
                TIME_DIRECTION="后" 
                MINUTES_AWAY=$time_diff
              else
                TIME_DIRECTION="正好"
                MINUTES_AWAY=0
              fi
              
              break
            fi
          done
          
          # 改进的班次判断逻辑，处理跨天情况
          IS_WORKING_TIME=false
          
          if [ "$IS_WORKING" = true ]; then
            case $CYCLE_POS in
              0) # 甲班 20:00-03:00 (跨天班次)
                if [ $HOUR_NUM -ge 20 ] || [ $HOUR_NUM -lt 3 ]; then
                  IS_WORKING_TIME=true
                  echo "✅ 当前在甲班工作时间 (20:00-03:00)"
                fi
                ;;
              2) # 乙班 03:00-11:00
                if [ $HOUR_NUM -ge 3 ] && [ $HOUR_NUM -lt 11 ]; then
                  IS_WORKING_TIME=true
                  echo "✅ 当前在乙班工作时间 (03:00-11:00)"
                fi
                ;;
              3) # 丙班 11:00-20:00
                if [ $HOUR_NUM -ge 11 ] && [ $HOUR_NUM -lt 20 ]; then
                  IS_WORKING_TIME=true
                  echo "✅ 当前在丙班工作时间 (11:00-20:00)"
                fi
                ;;
            esac
          fi
          
          if [ "$SHOULD_REMIND" = true ]; then
            echo "⏰ 在提醒时间窗口内: $TARGET_TIME ($TIME_DIRECTION${MINUTES_AWAY}分钟)"
            
            if [ "$IS_WORKING_TIME" = true ]; then
              echo "✅ 当前在上班时间，发送提醒..."
              
              # 添加星期信息
              WEEK_DAYS=("周一" "周二" "周三" "周四" "周五" "周六" "周日")
              WEEK_INDEX=$((CURRENT_WEEK - 1))
              WEEK_INFO="${WEEK_DAYS[$WEEK_INDEX]}"
              
              # 构建完整的提醒内容
              if [ "$TIME_DIRECTION" = "前" ]; then
                REMIND_TYPE="⏰ 即将到达巡检时段"
              elif [ "$TIME_DIRECTION" = "后" ]; then
                REMIND_TYPE="⏰ 已过巡检时段"
              else
                REMIND_TYPE="⏰ 正好在巡检时段"
              fi
              
              FULL_CONTENT="$REMINDER_CONTENT\n$REMIND_TYPE\n📅 $CURRENT_DATE $WEEK_INFO\n👨‍💼 今日班次：$TODAY_SHIFT\n🎯 目标时间：$TARGET_TIME\n⏱️ 当前时间：$CURRENT_TIME"
              
              # 发送钉钉提醒
              curl -X POST -H "Content-Type: application/json" \
                -d "{
                  \"msgtype\": \"text\",
                  \"text\": {
                    \"content\": \"$FULL_CONTENT\"
                  }
                }" \
                "https://oapi.dingtalk.com/robot/send?access_token=$DINGTALK_TOKEN"
              
              echo "✅ 提醒已发送"
            else
              echo "❌ 在提醒时间窗口内，但当前不在上班时间，跳过提醒"
            fi
          else
            echo "⏳ 不在任何提醒时间窗口内"
          fi

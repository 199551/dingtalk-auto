name: 副班提醒服务
on:
  schedule:
    # 在周五和周日的前一个班次下班前时间段执行（提醒明日上副班）
    - cron: '0,15,30,45 1-2,9-10 * * 5,0'  # UTC时间覆盖周五和周日的前一个班次下班前
  workflow_dispatch:
    inputs:
      description:
        description: '手动触发副班提醒测试'
        required: false
        default: '测试执行'

jobs:
  send-reminder:
    runs-on: ubuntu-latest
    steps:
      - name: 副班提醒
        env:
          DINGTALK_TOKEN: c965583b00a0f7184e546e662b6902b0fdfab31b110d56249a45c7921e28defc
        run: |
          # 设置时区
          export TZ='Asia/Shanghai'
          
          # 如果是手动触发，显示测试信息
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "🚀 手动触发副班提醒测试"
            echo "输入描述: ${{ github.event.inputs.description }}"
          fi
          
          # 获取当前时间
          CURRENT_WEEKDAY=$(date +%u)  # 1=周一, 5=周五, 7=周日
          CURRENT_HOUR=$(date +%H)
          CURRENT_MINUTE=$(date +%M)
          CURRENT_DATE=$(date +%Y-%m-%d)
          CURRENT_TIME=$(date +%H:%M)
          
          echo "当前日期: $CURRENT_DATE"
          echo "当前星期: $CURRENT_WEEKDAY"
          echo "当前时间: $CURRENT_TIME"
          
          # 检查是否是周五或周日（提醒明日上副班）
          if [ "$CURRENT_WEEKDAY" != "5" ] && [ "$CURRENT_WEEKDAY" != "0" ]; then
            echo "❌ 今天不是周五或周日，不发送副班提醒"
            # 如果是手动触发，即使不是周五或周日也继续执行
            if [ "${{ github.event_name }}" != "workflow_dispatch" ]; then
              exit 0
            fi
          fi
          
          # 四班三倒循环计算
          START_DATE="2025-10-27"  # 以2025-10-27为甲班开始
          DAYS_DIFF=$(( ($(date -d "$CURRENT_DATE" +%s) - $(date -d "$START_DATE" +%s)) / 86400 ))
          CYCLE_POS=$((DAYS_DIFF % 4))
          
          echo "从起始日相差天数: $DAYS_DIFF"
          echo "周期位置: $CYCLE_POS (0=甲班, 1=休班, 2=乙班, 3=丙班)"
          
          # 判断今日班次
          case $CYCLE_POS in
            0)
              TODAY_SHIFT="甲班 20:00-03:00"
              SHIFT_END_HOUR=3
              ;;
            1)
              TODAY_SHIFT="休班"
              SHIFT_END_HOUR=0
              ;;
            2)
              TODAY_SHIFT="乙班 03:00-11:00"
              SHIFT_END_HOUR=11
              ;;
            3)
              TODAY_SHIFT="丙班 11:00-20:00"
              SHIFT_END_HOUR=20
              ;;
          esac
          
          echo "今日班次: $TODAY_SHIFT"
          
          # 计算下班前1小时和半小时的时间窗口
          REMINDER_HOUR_START=$((SHIFT_END_HOUR - 1))
          REMINDER_HOUR_END=$((SHIFT_END_HOUR - 0))
          
          # 处理跨天情况
          if [ $REMINDER_HOUR_START -lt 0 ]; then
            REMINDER_HOUR_START=$((24 + REMINDER_HOUR_START))
          fi
          if [ $REMINDER_HOUR_END -lt 0 ]; then
            REMINDER_HOUR_END=$((24 + REMIND_END_HOUR))
          fi
          
          echo "下班时间: $SHIFT_END_HOUR:00"
          echo "提醒时间范围: $REMINDER_HOUR_START:00 - $REMINDER_HOUR_END:30 (下班前1小时至半小时)"
          
          # 检查当前是否在提醒时间范围内（下班前1小时至半小时）
          current_total_minutes=$((10#$CURRENT_HOUR * 60 + 10#$CURRENT_MINUTE))
          reminder_start_minutes=$((REMINDER_HOUR_START * 60))
          reminder_end_minutes=$((REMINDER_HOUR_END * 60 + 30))
          
          # 处理跨天情况
          if [ $reminder_start_minutes -gt $reminder_end_minutes ]; then
            # 如果开始时间大于结束时间，说明跨天了
            if [ $current_total_minutes -ge $reminder_start_minutes ] || [ $current_total_minutes -le $reminder_end_minutes ]; then
              IN_REMINDER_WINDOW=true
            else
              IN_REMINDER_WINDOW=false
            fi
          else
            # 正常情况，没有跨天
            if [ $current_total_minutes -ge $reminder_start_minutes ] && [ $current_total_minutes -le $reminder_end_minutes ]; then
              IN_REMINDER_WINDOW=true
            else
              IN_REMINDER_WINDOW=false
            fi
          fi
          
          # 创建标记文件路径，用于记录今天是否已经发送过提醒
          MARKER_FILE="/tmp/assistant_shift_reminder_${CURRENT_DATE}.marker"
          
          # 如果是手动触发或符合自动触发条件
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] || [ "$IN_REMINDER_WINDOW" = true ]; then
            # 检查是否今天已经发送过提醒
            if [ -f "$MARKER_FILE" ] && [ "${{ github.event_name }}" != "workflow_dispatch" ]; then
              echo "⏰ 今天已经发送过副班提醒，跳过重复提醒"
            else
              # 确定明日星期和日期
              TOMORROW_DATE=$(date -d "tomorrow" +%Y-%m-%d)
              TOMORROW_WEEKDAY=$(date -d "tomorrow" +%u)
              
              # 构建提醒内容
              CONTENT="📢 副班提醒\n\n明日($TOMORROW_DATE)上副班(11:00-20:00)\n请提前做好工作安排\n⏰ 提醒时间：$CURRENT_TIME\n📅 当前日期：$CURRENT_DATE\n👨‍💼 当前班次：$TODAY_SHIFT\n\n💡 温馨提示：\n- 副班工作时间：11:00-20:00\n- 请合理安排作息时间\n- 确保工作交接顺利完成"
              
              # 发送钉钉提醒
              curl -X POST -H "Content-Type: application/json" \
                -d "{
                  \"msgtype\": \"text\",
                  \"text\": {
                    \"content\": \"$CONTENT\"
                  },
                  \"at\": {
                    \"isAtAll\": false
                  }
                }" \
                "https://oapi.dingtalk.com/robot/send?access_token=$DINGTALK_TOKEN"
              
              # 创建标记文件，表示今天已经发送过提醒
              touch "$MARKER_FILE"
              echo "✅ 副班提醒已发送，并创建标记文件防止重复提醒"
            fi
          else
            echo "⏰ 不在提醒时间窗口内"
            # 如果不在提醒时间窗口内，删除标记文件（如果存在）
            if [ -f "$MARKER_FILE" ]; then
              rm "$MARKER_FILE"
              echo "🗑️ 删除标记文件，准备下一次提醒"
            fi
          fi

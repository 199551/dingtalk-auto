name: 常一泵切换提醒

on:
  schedule:
    # 每15分钟执行一次，覆盖7:40-8:20窗口
    - cron: '*/15 23-0 * * *'  # UTC时间23-0点 = 北京时间7-8点
  workflow_dispatch:
    inputs:
      test_date:
        description: '测试日期 (YYYY-MM-DD)'
        required: false
        default: ''
      test_time:
        description: '测试时间 (HH:MM)'
        required: false
        default: '08:00'

jobs:
  pump-switch-reminder:
    runs-on: ubuntu-latest
    steps:
      - name: 常一泵切换提醒
        env:
          DINGTALK_TOKEN: ${{ secrets.DINGTALK_TOKEN }}
        run: |
          # 设置时区
          export TZ='Asia/Shanghai'
          
          # 处理手动输入的测试时间和日期
          if [ -n "${{ github.event.inputs.test_date }}" ] && [ -n "${{ github.event.inputs.test_time }}" ]; then
            TEST_DATE="${{ github.event.inputs.test_date }}"
            TEST_TIME="${{ github.event.inputs.test_time }}"
            echo "使用测试日期: $TEST_DATE"
            echo "使用测试时间: $TEST_TIME"
            CURRENT_HOUR=$(echo $TEST_TIME | cut -d: -f1)
            CURRENT_MINUTE=$(echo $TEST_TIME | cut -d: -f2)
            CURRENT_TIME=$TEST_TIME
            CURRENT_DATE=$TEST_DATE
          else
            CURRENT_HOUR=$(date +%H)
            CURRENT_MINUTE=$(date +%M)
            CURRENT_TIME=$(date +%H:%M)
            CURRENT_DATE=$(date +%Y-%m-%d)
          fi
          
          CURRENT_WEEK=$(date -d "$CURRENT_DATE" +%u)  # 1-7 周一到周日
          CURRENT_DAY=$(date -d "$CURRENT_DATE" +%d)   # 日期
          CURRENT_MONTH=$(date -d "$CURRENT_DATE" +%m) # 月份
          CURRENT_YEAR=$(date -d "$CURRENT_DATE" +%Y)  # 年份
          
          echo "当前时间(北京时间): $(date)"
          echo "当前日期: $CURRENT_DATE"
          echo "当前时分: $CURRENT_TIME"
          echo "当前星期: $CURRENT_WEEK (1=周一, 5=周五)"
          echo "当前日期号: $CURRENT_DAY"
          
          # 处理跨天班次问题
          HOUR_NUM=$((10#$CURRENT_HOUR))
          ADJUSTED_DATE="$CURRENT_DATE"
          
          # 只在真正跨天的时间段（00:00-02:59）调整日期
          if [ $HOUR_NUM -lt 3 ]; then
            # 00:00-02:59 属于前一天的甲班
            ADJUSTED_DATE=$(date -d "yesterday" -d "$CURRENT_DATE" +%Y-%m-%d)
            echo "调整日期为前一天: $ADJUSTED_DATE (处理跨天甲班)"
          else
            # 03:00-23:59 使用当前日期
            echo "使用当前日期: $ADJUSTED_DATE"
          fi
          
          # 四班三倒循环计算，使用调整后的日期
          START_DATE="2025-10-27"  # 以2025-10-27为甲班开始
          DAYS_DIFF=$(( ($(date -d "$ADJUSTED_DATE" +%s) - $(date -d "$START_DATE" +%s)) / 86400 ))
          CYCLE_POS=$((DAYS_DIFF % 4))
          
          echo "从起始日相差天数: $DAYS_DIFF"
          echo "周期位置: $CYCLE_POS (0=甲班, 1=休班, 2=乙班, 3=丙班)"
          
          # 判断今日班次
          case $CYCLE_POS in
            0)
              TODAY_SHIFT="甲班 20:00-03:00"
              IS_WORKING=true
              ;;
            1)
              TODAY_SHIFT="休班"
              IS_WORKING=false
              ;;
            2)
              TODAY_SHIFT="乙班 03:00-11:00"
              IS_WORKING=true
              ;;
            3)
              TODAY_SHIFT="丙班 11:00-20:00"
              IS_WORKING=true
              ;;
          esac
          
          echo "今日班次: $TODAY_SHIFT"
          
          # 检查是否在8:00前后20分钟内
          SHOULD_REMIND=false
          TARGET_TIME="08:00"
          target_total_minutes=$((8 * 60))  # 8:00 = 480分钟
          current_total_minutes=$((10#$CURRENT_HOUR * 60 + 10#$CURRENT_MINUTE))
          time_diff=$((current_total_minutes - target_total_minutes))
          
          # 前后20分钟窗口
          if [ $time_diff -ge -20 ] && [ $time_diff -le 20 ]; then
            SHOULD_REMIND=true
            
            if [ $time_diff -lt 0 ]; then
              TIME_DIRECTION="前"
              MINUTES_AWAY=$((0 - $time_diff))
            elif [ $time_diff -gt 0 ]; then
              TIME_DIRECTION="后" 
              MINUTES_AWAY=$time_diff
            else
              TIME_DIRECTION="正好"
              MINUTES_AWAY=0
            fi
            echo "⏰ 在8:00前后20分钟窗口内 ($TIME_DIRECTION${MINUTES_AWAY}分钟)"
          else
            echo "⏳ 不在8:00前后20分钟窗口内"
          fi
          
          # 检查是否是周一或周五
          IS_MONDAY_OR_FRIDAY=false
          if [ $CURRENT_WEEK -eq 1 ] || [ $CURRENT_WEEK -eq 5 ]; then
            IS_MONDAY_OR_FRIDAY=true
            echo "✅ 今天是周一或周五"
          else
            echo "❌ 今天不是周一或周五"
          fi
          
          # 判断是否是每月最后一个周五
          IS_LAST_FRIDAY=false
          if [ $CURRENT_WEEK -eq 5 ]; then
            # 计算下一个周五的日期
            NEXT_FRIDAY=$(date -d "$CURRENT_DATE +7 days" +%Y-%m-%d)
            # 如果下一个周五的月份与当前月份不同，则当前是最后一个周五
            CURRENT_MONTH=$(date -d "$CURRENT_DATE" +%m)
            NEXT_FRIDAY_MONTH=$(date -d "$NEXT_FRIDAY" +%m)
            if [ "$CURRENT_MONTH" != "$NEXT_FRIDAY_MONTH" ]; then
              IS_LAST_FRIDAY=true
              echo "✅ 今天是本月最后一个周五"
            else
              echo "❌ 今天不是本月最后一个周五"
            fi
          fi
          
          # 判断当前是否在上班时间内
          IS_WORKING_TIME=false
          
          if [ "$IS_WORKING" = true ]; then
            case $CYCLE_POS in
              0) # 甲班 20:00-03:00 (跨天班次)
                if [ $HOUR_NUM -ge 20 ] || [ $HOUR_NUM -lt 3 ]; then
                  IS_WORKING_TIME=true
                  echo "✅ 当前在甲班工作时间 (20:00-03:00)"
                fi
                ;;
              2) # 乙班 03:00-11:00
                if [ $HOUR_NUM -ge 3 ] && [ $HOUR_NUM -lt 11 ]; then
                  IS_WORKING_TIME=true
                  echo "✅ 当前在乙班工作时间 (03:00-11:00)"
                fi
                ;;
              3) # 丙班 11:00-20:00
                if [ $HOUR_NUM -ge 11 ] && [ $HOUR_NUM -lt 20 ]; then
                  IS_WORKING_TIME=true
                  echo "✅ 当前在丙班工作时间 (11:00-20:00)"
                fi
                ;;
            esac
          fi
          
          # 创建标记文件路径，用于记录今天是否已经发送过提醒
          MARKER_FILE="/tmp/pump_switch_reminder_${CURRENT_DATE}.marker"
          
          # 发送提醒的条件：在8:00窗口内 + 是周一或周五 + 在上班时间
          if [ "$SHOULD_REMIND" = true ] && [ "$IS_MONDAY_OR_FRIDAY" = true ] && [ "$IS_WORKING_TIME" = true ]; then
            echo "✅ 满足所有发送提醒条件"
            
            # 检查是否今天已经发送过提醒
            if [ -f "$MARKER_FILE" ]; then
              echo "⏰ 今天已经发送过常一泵切换提醒，跳过重复提醒"
            else
              # 构建提醒内容
              WEEK_DAYS=("周一" "周二" "周三" "周四" "周五" "周六" "周日")
              WEEK_INDEX=$((CURRENT_WEEK - 1))
              WEEK_INFO="${WEEK_DAYS[$WEEK_INDEX]}"
              
              # 根据星期几确定操作内容
              if [ $CURRENT_WEEK -eq 1 ]; then
                # 周一
                OPERATION="切换至变频"
                REMIND_CONTENT="🔧 每周一8:00班 - 请将常一泵切换至变频运行"
              elif [ $CURRENT_WEEK -eq 5 ]; then
                # 周五
                OPERATION="切换至工频"
                REMIND_CONTENT="🔧 每周五8:00班 - 请将常一泵切换至工频运行"
                
                # 如果是最后一个周五，添加清理过滤器提醒
                if [ "$IS_LAST_FRIDAY" = true ]; then
                  REMIND_CONTENT="$REMIND_CONTENT\n🧹 每月最后一个周五 - 请同时清理变频泵过滤器"
                fi
              fi
              
              # 构建完整消息
              if [ "$TIME_DIRECTION" = "前" ]; then
                REMIND_TYPE="⏰ 即将到达切换时段"
              elif [ "$TIME_DIRECTION" = "后" ]; then
                REMIND_TYPE="⏰ 已过切换时段"
              else
                REMIND_TYPE="⏰ 正好在切换时段"
              fi
              
              FULL_CONTENT="🏭 常一泵切换提醒\n$REMIND_CONTENT\n$REMIND_TYPE\n📅 $CURRENT_DATE $WEEK_INFO\n👨‍💼 今日班次：$TODAY_SHIFT\n🎯 目标时间：$TARGET_TIME\n⏱️ 当前时间：$CURRENT_TIME"
              
              echo "准备发送提醒: $OPERATION"
              
              # 发送钉钉提醒
              curl -X POST -H "Content-Type: application/json" \
                -d "{
                  \"msgtype\": \"text\",
                  \"text\": {
                    \"content\": \"$FULL_CONTENT\"
                  }
                }" \
                "https://oapi.dingtalk.com/robot/send?access_token=$DINGTALK_TOKEN"
              
              # 创建标记文件，表示今天已经发送过提醒
              touch "$MARKER_FILE"
              echo "✅ 常一泵切换提醒已发送，并创建标记文件防止重复提醒"
            fi
          else
            echo "❌ 不满足发送提醒条件:"
            echo "   在8:00窗口: $SHOULD_REMIND"
            echo "   是周一/周五: $IS_MONDAY_OR_FRIDAY" 
            echo "   在上班时间: $IS_WORKING_TIME"
            
            # 如果不在提醒条件内，删除标记文件（如果存在）
            if [ -f "$MARKER_FILE" ]; then
              rm "$MARKER_FILE"
              echo "🗑️ 删除标记文件，准备下一次提醒"
            fi
          fi
